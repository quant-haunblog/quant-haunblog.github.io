import{_ as l,c as h,j as i,a as n,G as e,a2 as t,B as p,o as k}from"./chunks/framework.CdbxnhrM.js";const F=JSON.parse('{"title":"QuantLib-Python: Calendar Class","description":"The QuantLib Calendar class plays an important role in date calculations for financial markets, helping to accurately manage dates based on business days and holidays. Since each financial market has its own unique business days and holidays, this class supports calendars for various financial markets, such as New York, London, and Tokyo, enabling precise date calculations that reflect the business day conventions of the respective region or market.","frontmatter":{"description":"The QuantLib Calendar class plays an important role in date calculations for financial markets, helping to accurately manage dates based on business days and holidays. Since each financial market has its own unique business days and holidays, this class supports calendars for various financial markets, such as New York, London, and Tokyo, enabling precise date calculations that reflect the business day conventions of the respective region or market.","head":[["meta",{"property":"og:title","content":"QuantLib-Python, Calendar Class"}],["meta",{"property":"og:description","content":"The QuantLib Calendar class plays an important role in date calculations for financial markets, helping to accurately manage dates based on business days and holidays. Since each financial market has its own unique business days and holidays, this class supports calendars for various financial markets, such as New York, London, and Tokyo, enabling precise date calculations that reflect the business day conventions of the respective region or market."}],["meta",{"property":"og:image","content":"/images/QuantLib.jpg"}],["meta",{"property":"og:url","content":"https://quant-haunblog.github.io/en/quantlib/calendar"}]]},"headers":[],"relativePath":"en/quantlib/calendar.md","filePath":"en/quantlib/calendar.md","lastUpdated":null}'),d={name:"en/quantlib/calendar.md"};function r(o,s,c,E,y,g){const a=p("AdsInarticle");return k(),h("div",null,[s[0]||(s[0]=i("h1",{id:"quantlib-python-calendar-class",tabindex:"-1"},[n("QuantLib-Python: Calendar Class "),i("a",{class:"header-anchor",href:"#quantlib-python-calendar-class","aria-label":'Permalink to "QuantLib-Python: Calendar Class"'},"​")],-1)),s[1]||(s[1]=i("p",null,[i("strong",null,[n("The QuantLib "),i("code",null,"Calendar"),n(" class plays an important role in date calculations for financial markets, helping to accurately manage dates based on business days and holidays.")])],-1)),s[2]||(s[2]=i("p",null,[i("strong",null,"Since each financial market has its own unique business days and holidays, this class supports calendars for various financial markets, such as New York, London, and Tokyo, enabling precise date calculations that reflect the business day conventions of the respective region or market.")],-1)),s[3]||(s[3]=i("p",null,[i("strong",null,"It allows you to calculate the number of business days within a given period, determine the date after a specified number of business days, and check if a specific date is a business day.")],-1)),e(a),s[4]||(s[4]=t(`<h2 id="overview-of-the-calendar-class" tabindex="-1">Overview of the Calendar Class <a class="header-anchor" href="#overview-of-the-calendar-class" aria-label="Permalink to &quot;Overview of the Calendar Class&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Calendar Class</p><ul><li><p>One of the challenging aspects of handling <code>over-the-counter derivatives (OTC)</code> is managing <code>holidays</code>. The complexity of <code>holiday management</code> arises not only because holidays vary greatly from country to country, but also because business days frequently change due to irregular holidays like election days or substitute holidays.</p></li><li><p>Since <code>financial markets</code> operate and quotes are formed only on <code>business days</code>, failing to accurately handle these <code>holidays</code> could lead to distorted <code>pricing</code> results. To address this, <code>QuantLib</code> provides a class for managing holidays, which is the <code>Calendar</code> class.</p></li></ul></div><h2 id="structure-of-the-calendar-class" tabindex="-1">Structure of the Calendar Class <a class="header-anchor" href="#structure-of-the-calendar-class" aria-label="Permalink to &quot;Structure of the Calendar Class&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">Calendar Class Structure</p><ul><li><p>The <code>Calendar</code> class is used to handle <code>business days</code> or <code>holidays</code> of a specific <code>exchange</code> or <code>country</code> for <code>pricing</code> purposes, and also provides the functionality to calculate the number of <code>business days</code>. To implement the <code>Calendar</code> class, you simply need to input the name of the <code>country</code> you wish to use.</p></li><li><p>Below is an example code that creates calendar objects for the U.S., Eurozone, South Korea, Japan, and China. The <code>Calendar</code> class is very useful because it handles the holidays of each country without requiring additional efforts to manage them.</p></li></ul></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">us </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.UnitedStates(ql.UnitedStates.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NYSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.UnitedKingdom(ql.UnitedKingdom.Metals)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.TARGET()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.SouthKorea()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">jp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Japan()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.China()</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Calendar Markets</p><ul><li>Argentina : [‘Merval’]</li><li>Brazil : [‘Exchange’, ‘Settlement’]</li><li>Canada : [‘Settlement’, ‘TSX’]</li><li>China : [‘IB’, ‘SSE’]</li><li>CzechRepublic : [‘PSE’]</li><li>France : [‘Exchange’, ‘Settlement’]</li><li>Germany : [‘Eurex’, ‘FrankfurtStockExchange’, ‘Settlement’, ‘Xetra’]</li><li>HongKong : [‘HKEx’]</li><li>Iceland : [‘ICEX’]</li><li>India : [‘NSE’]</li><li>Indonesia : [‘BEJ’, ‘JSX’]</li><li>Israel : [‘Settlement’, ‘TASE’]</li><li>Italy : [‘Exchange’, ‘Settlement’]</li><li>Mexico : [‘BMV’]</li><li>Russia : [‘MOEX’, ‘Settlement’]</li><li>SaudiArabia : [‘Tadawul’]</li><li>Singapore : [‘SGX’]</li><li>Slovakia : [‘BSSE’]</li><li>SouthKorea : [‘KRX’, ‘Settlement’]</li><li>Taiwan : [‘TSEC’]</li><li>Ukraine : [‘USE’]</li><li>UnitedKingdom : [‘Exchange’, ‘Metals’, ‘Settlement’]</li><li>UnitedStates : [‘FederalReserve’, ‘GovernmentBond’, ‘LiborImpact’, ‘NERC’, ‘NYSE’, ‘Settlement’]</li></ul></div>`,6)),e(a),s[5]||(s[5]=t(`<h2 id="functions-of-the-calendar-class" tabindex="-1">Functions of the Calendar Class <a class="header-anchor" href="#functions-of-the-calendar-class" aria-label="Permalink to &quot;Functions of the Calendar Class&quot;">​</a></h2><h3 id="some-commonly-used-member-functions" tabindex="-1">some commonly used member functions: <a class="header-anchor" href="#some-commonly-used-member-functions" aria-label="Permalink to &quot;some commonly used member functions:&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.SouthKorea()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># isBusinessDay(d)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># A Boolean value that determines whether d is a business day</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is BusinessDay :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.isBusinessDay(date))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is BusinessDay : True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># isHoliday(d)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># A boolean value that determines whether d is a holiday</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Holiday :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.isHoliday(date))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Holiday : False</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # isWeekend(w)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # A Boolean value that determines whether w is a weekend (in some countries, weekends are not scheduled on Saturdays and Sundays)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Weekend :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.isWeekend(ql.Friday))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Weekend : False</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # isEndOfMonth(d)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # A boolean value that determines whether d is the last working day at the end of the month</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Last BusinessDay :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.isEndOfMonth(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">27</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Last BusinessDay : False</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # endOfMonth(d)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # date, returns the last working day of the month in which d is located</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Last BusinessDay :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.endOfMonth(date))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Last BusinessDay : June 28th, 2024</span></span></code></pre></div><h3 id="holiday-list" tabindex="-1">Holiday List <a class="header-anchor" href="#holiday-list" aria-label="Permalink to &quot;Holiday List&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">holidayList()</p><ul><li>The <code>holidayList()</code> method takes a <code>Calendar</code>, a start date (<code>Date</code>), and an end date (<code>Date</code>) as arguments, and returns the <code>holidays</code> that fall within the period between the start and end dates based on the given calendar.</li></ul></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ql.Calendar.holidayList(calendar, from, to, includeWeekEnds=False)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ql.Calendar.holidayList(ql.SouthKorea(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                              ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                              ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))</span></span></code></pre></div><h3 id="custom-holiday-list" tabindex="-1">Custom Holiday List <a class="header-anchor" href="#custom-holiday-list" aria-label="Permalink to &quot;Custom Holiday List&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">Custom Holiday List</p><p>The <code>Calendar</code> class does not automatically monitor substitute or irregular holidays, so it provides functions to modify the calendar.</p><ul><li><code>addHoliday(d)</code>: Method to add a new holiday.</li><li><code>removeHoliday(d)</code>: Method to remove a date from the list of holidays.</li></ul></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.TARGET()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2020</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2020</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Business Day : &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.isBusinessDay(day1))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Is Business Day : True</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Business Day : &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.isBusinessDay(day2))  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Is Business Day : False</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cal.addHoliday(day1)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cal.removeHoliday(day2) </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Business Day : &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.isBusinessDay(day1))  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Is Business Day : False</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Business Day : &#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.isBusinessDay(day2))  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Is Business Day : True</span></span></code></pre></div>`,9)),e(a),s[6]||(s[6]=t(`<h3 id="calculation-features" tabindex="-1">Calculation Features <a class="header-anchor" href="#calculation-features" aria-label="Permalink to &quot;Calculation Features&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Calculation Features</p><p>The <code>Calendar</code> class provides functions to calculate the number of business days between two dates and to return the date after a specific period (<code>Period</code>) from a given date (<code>Date</code>).</p><ul><li><p><code>advance(d, period, convention, endOfMonth)</code></p><ul><li>Returns the date after a specific period from a given date (<code>Date</code>).</li></ul></li><li><p><code>Business Day Convention</code></p><ul><li>Defines the rule for adjusting the actual maturity date when it coincides with a holiday.</li><li>Business day conventions are enumerated as follows, representing commonly used market practices:</li></ul></li></ul></div><div class="warning custom-block"><p class="custom-block-title">BusinessDayConvention</p><ul><li><code>ql.Unadjusted</code>: No adjustment.</li><li><code>ql.Preceding</code>: Adjust to the previous business day.</li><li><code>ql.ModifiedPreceding</code>: Adjust to the previous business day, but if that changes the month, adjust to the next business day.</li><li><code>ql.Following</code>: Adjust to the next business day.</li><li><code>ql.ModifiedFollowing</code>: Adjust to the next business day, but if that changes the month, adjust to the previous business day.</li></ul></div><div class="danger custom-block"><p class="custom-block-title"><code>End of Month</code></p><ul><li>The end-of-month convention determines whether, if the reference date is the last business day of the month, the subsequent periods (e.g., one month later, two months later) should also be adjusted to the last business day of each month.</li><li>For example, if today is February 29, 2024, it is the last business day of February.</li><li>If <code>endOfMonth</code> is set to <code>True</code>, then two months later would fall on the last business day of April, which is April 30, instead of April 28.</li></ul></div><div class="info custom-block"><p class="custom-block-title"><code>businessDaysBetween(from, to, includeFirst, includeLast)</code></p><ul><li>Takes a start date (<code>from</code>) and an end date (<code>to</code>) as arguments and returns the number of business days between the two dates.</li></ul></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.SouthKorea()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">firstDate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">secondDate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Date 2 Adj :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.adjust(secondDate, ql.Preceding))  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Date 2 Adj : April 1st, 2024</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Date 2 Adj :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.adjust(secondDate, ql.ModifiedPreceding))  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Date 2 Adj : April 1st, 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Period(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Months)  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Date 1 Month Adv :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.advance(firstDate, mat, ql.Following, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Date 1 Month Adv : April 1st, 2024</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Date 1 Month Adv :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cal.advance(firstDate, mat, ql.ModifiedFollowing, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Date 1 Month Adv : March 29th, 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Business Days Between :&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cal.businessDaysBetween(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.March, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.March, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Business Days Between : 19</span></span></code></pre></div><h3 id="joint-calendar" tabindex="-1">Joint Calendar <a class="header-anchor" href="#joint-calendar" aria-label="Permalink to &quot;Joint Calendar&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">Joint Calendar</p><ul><li>Imagine a trader in South Korea dealing with a trader in Europe on an over-the-counter derivative whose underlying asset is the 2-year U.S. Treasury rate. In this case, the calendars that need to be considered are for South Korea, the Eurozone, and the United States—three in total. The traders must take into account the holidays in all three regions to determine interest payment dates, rate setting dates, or maturity dates.</li><li>The <code>jointCalendar()</code> function combines each of these calendars into one. It takes the calendars of the necessary countries as arguments and merges them into a new, unified calendar.</li></ul></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">us </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.UnitedStates(ql.UnitedStates.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NYSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">eu </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.TARGET()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">kr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.SouthKorea()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ql.JointCalendar(calendar1, calendar2, </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #                  calendar3, JointCalendarRule=JoinHolidays)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">new_calendar </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.JointCalendar(us, eu, kr)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(new_calendar.holidayList(date1, date2))</span></span></code></pre></div>`,9))])}const C=l(d,[["render",r]]);export{F as __pageData,C as default};
