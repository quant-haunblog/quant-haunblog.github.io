import{_ as a,c as t,a2 as i,G as n,B as l,o as h}from"./chunks/framework.CdbxnhrM.js";const E=JSON.parse('{"title":"QuantLib-Python: Period Class","description":"The QuantLib Period class is used to represent time intervals and is an important class for defining the duration between dates. It is primarily used to specify periods in financial products, such as maturity periods and interest payment schedules.","frontmatter":{"description":"The QuantLib Period class is used to represent time intervals and is an important class for defining the duration between dates. It is primarily used to specify periods in financial products, such as maturity periods and interest payment schedules.","head":[["meta",{"property":"og:title","content":"QuantLib-Python, Period Class"}],["meta",{"property":"og:description","content":"The QuantLib Period class is used to represent time intervals and is an important class for defining the duration between dates. It is primarily used to specify periods in financial products, such as maturity periods and interest payment schedules."}],["meta",{"property":"og:image","content":"/images/QuantLib.jpg"}],["meta",{"property":"og:url","content":"https://quant-haunblog.github.io/en/quantlib/period"}]]},"headers":[],"relativePath":"en/quantlib/period.md","filePath":"en/quantlib/period.md","lastUpdated":null}'),p={name:"en/quantlib/period.md"};function r(o,s,d,k,c,u){const e=l("AdsInarticle");return h(),t("div",null,[s[0]||(s[0]=i('<h1 id="quantlib-python-period-class" tabindex="-1">QuantLib-Python: Period Class <a class="header-anchor" href="#quantlib-python-period-class" aria-label="Permalink to &quot;QuantLib-Python: Period Class&quot;">​</a></h1><p><strong>The QuantLib Period class is used to represent time intervals and is an important class for defining the duration between dates.</strong></p><p><strong>It is primarily used to specify periods in financial products, such as maturity periods and interest payment schedules.</strong></p><div class="info custom-block"><p class="custom-block-title">Language</p><ul><li><a href="/quantlib/period">한국어 페이지: Korean Page</a></li></ul></div>',4)),n(e),s[1]||(s[1]=i(`<h2 id="overview-of-the-period-class" tabindex="-1">Overview of the Period Class <a class="header-anchor" href="#overview-of-the-period-class" aria-label="Permalink to &quot;Overview of the Period Class&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Period Class</p><ul><li>Every <code>derivatives</code> fundamentally requires multiple date-related details, such as <code>effective date</code>, <code>maturity date</code>, <code>settlement date</code>, and <code>interest payment dates</code>.</li><li>These details are not only essential elements in structuring a derivative but also crucial in determining the product&#39;s price. How these dates are defined can directly influence the pricing, which is why such specifics are meticulously documented in the <code>term sheet</code> for any derivative transaction.</li><li>The reason these date details are necessary is primarily to assess how much time remains until a product’s maturity or how much time is left until the next interest payment date.</li><li>In other words, for <code>pricing</code> or <code>position management</code>, what we are truly interested in is not the <code>dates</code> themselves but the <code>periods</code> between them.</li><li>This means that relative intervals of time are more significant than absolute points in time, implying that our focus should be more on durations (lines) rather than individual dates (points).</li></ul></div><h2 id="structure-of-the-period-class" tabindex="-1">Structure of the Period Class <a class="header-anchor" href="#structure-of-the-period-class" aria-label="Permalink to &quot;Structure of the Period Class&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">Period Class Structure</p><p>While the <code>Date</code> class exists to define a <code>specific date</code>, the <code>Period</code> class is designed to define a <code>specific time interval</code>. The purpose of the <code>Period</code> class is not to pinpoint an exact moment but to establish the <code>duration between two points in time</code>. To use the <code>Period</code> class, the following structure should be followed:</p></div><h3 id="period-class-implementation-method-1" tabindex="-1">Period Class Implementation Method #1 <a class="header-anchor" href="#period-class-implementation-method-1" aria-label="Permalink to &quot;Period Class Implementation Method #1&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">#1, ql.Period(Integer, TimeUnits)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ql.Period(Integer, TimeUnits)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">period </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Period(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Months)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3M</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(period.length())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(period.units())   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Months</span></span></code></pre></div><ul><li>The first method involves setting an integer (Integer) and a time unit (TimeUnits) as parameters.</li><li>For the integer, you can input a regular number, but the key element to pay attention to is the time unit. QuantLib has various enumerations for different purposes.</li><li>An Enumeration is a data type consisting of a set of predefined members, organized similarly to a user-defined group for a specific purpose. Time units are one such enumeration, with members like below</li><li>For example, to define a period of 3 months, you would input 3 as the first parameter and ql.Months as the second.</li></ul></div><div class="warning custom-block"><p class="custom-block-title">TimeUnits</p><ul><li>ql.Days</li><li>ql.Weeks</li><li>ql.Months</li><li>ql.Years</li></ul></div><h3 id="period-class-implementation-method-2" tabindex="-1">Period Class Implementation Method #2 <a class="header-anchor" href="#period-class-implementation-method-2" aria-label="Permalink to &quot;Period Class Implementation Method #2&quot;">​</a></h3><div class="info custom-block"><p class="custom-block-title">#2, ql.Period(Frequency)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ql.Period(Frequency)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">period </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Period(ql.Semiannual)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(period)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 6M</span></span></code></pre></div><ul><li>The second method for defining a <code>Period</code> is by inputting a <code>Frequency</code> as the parameter.</li><li>In QuantLib, frequencies are also implemented as enumerations. Below are some of the members that constitute the frequency enumeration below.</li><li>This frequency enumeration is frequently used for financial instruments like interest rate swaps or currency swaps, where interest is paid at regular intervals.</li></ul></div><div class="warning custom-block"><p class="custom-block-title">Frequency</p><ul><li>ql.Annual</li><li>ql.Semiannual</li><li>ql.Quarterly</li><li>ql.Monthly</li><li>ql.Biweekly</li><li>ql.Daily</li><li>ql.Once</li></ul></div><h2 id="functions-of-the-period-class" tabindex="-1">Functions of the Period Class <a class="header-anchor" href="#functions-of-the-period-class" aria-label="Permalink to &quot;Functions of the Period Class&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Period Class Features</p><p>The primary feature of the <code>Period</code> class is its ability to perform <code>arithmetic operations</code> on dates when combined with the <code>Date</code> class. For example, suppose you want to know the date <code>3 weeks</code>, <code>3 months</code>, or <code>3 years</code> after April 10, 2024.<br> By combining the <code>Date</code> and <code>Period</code> classes, you can easily answer such questions. Adding or subtracting a specific period from a date is one of QuantLib’s useful features. These arithmetic operations can also be performed between two dates, providing the duration between them.</p></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Functions</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;After 3 Weeks : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Period(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Weeks)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;After 3 Months : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Period(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Months)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;After 3 Years : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Period(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Years)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Days between Date2 and Date1 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> date1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## OutPut</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## After 3 Weeks : May 1st, 2024   </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## After 3 Months : July 10th, 2024</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## After 3 Years : April 10th, 2027</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Days between Date2 and Date1 = 265</span></span></code></pre></div>`,13))])}const g=a(p,[["render",r]]);export{E as __pageData,g as default};
