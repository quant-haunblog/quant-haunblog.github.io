import{_ as t,c as e,a2 as i,G as n,B as l,o as h}from"./chunks/framework.CdbxnhrM.js";const u=JSON.parse('{"title":"QuantLib-Python: DayCounter Class","description":"The DayCounter class in QuantLib is a class that implements various methods used for date calculations in financial markets. This class is used to calculate the number of days between two dates or to determine the fraction of time between specific dates. Since interest calculation methods are crucial in financial contracts, the DayCounter class provides various day count conventions (e.g., Actual/Actual, Actual/360, 30/360). This allows for accurate interest calculations and helps maintain consistency between different financial products.","frontmatter":{"description":"The DayCounter class in QuantLib is a class that implements various methods used for date calculations in financial markets. This class is used to calculate the number of days between two dates or to determine the fraction of time between specific dates. Since interest calculation methods are crucial in financial contracts, the DayCounter class provides various day count conventions (e.g., Actual/Actual, Actual/360, 30/360). This allows for accurate interest calculations and helps maintain consistency between different financial products.","head":[["meta",{"property":"og:title","content":"QuantLib-Python, DayCounter Class"}],["meta",{"property":"og:description","content":"The DayCounter class in QuantLib is a class that implements various methods used for date calculations in financial markets. This class is used to calculate the number of days between two dates or to determine the fraction of time between specific dates. Since interest calculation methods are crucial in financial contracts, the DayCounter class provides various day count conventions (e.g., Actual/Actual, Actual/360, 30/360). This allows for accurate interest calculations and helps maintain consistency between different financial products."}],["meta",{"property":"og:image","content":"/images/QuantLib.jpg"}],["meta",{"property":"og:url","content":"https://quant-haunblog.github.io/en/quantlib/daycounter"}]]},"headers":[],"relativePath":"en/quantlib/daycounter.md","filePath":"en/quantlib/daycounter.md","lastUpdated":null}'),p={name:"en/quantlib/daycounter.md"};function k(r,s,d,o,c,y){const a=l("AdsInarticle");return h(),e("div",null,[s[0]||(s[0]=i('<h1 id="quantlib-python-daycounter-class" tabindex="-1">QuantLib-Python: DayCounter Class <a class="header-anchor" href="#quantlib-python-daycounter-class" aria-label="Permalink to &quot;QuantLib-Python: DayCounter Class&quot;">​</a></h1><p><strong>The <code>DayCounter</code> class in QuantLib is a class that implements various methods used for date calculations in financial markets. This class is used to calculate the number of days between two dates or to determine the fraction of time between specific dates.</strong></p><p><strong>Since interest calculation methods are crucial in financial contracts, the <code>DayCounter</code> class provides various day count conventions (e.g., Actual/Actual, Actual/360, 30/360). This allows for accurate interest calculations and helps maintain consistency between different financial products.</strong></p><div class="info custom-block"><p class="custom-block-title">Language</p><ul><li><a href="/quantlib/daycounter">한국어 페이지: Korean Page</a></li></ul></div>',4)),n(a),s[1]||(s[1]=i(`<h2 id="overview-of-the-daycounter-class" tabindex="-1">Overview of the DayCounter Class <a class="header-anchor" href="#overview-of-the-daycounter-class" aria-label="Permalink to &quot;Overview of the DayCounter Class&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">DayCounter Class</p><ul><li><p>In financial transactions, there are commonly agreed rules among market participants, and in the <code>FICC</code> (Fixed Income, Currency, Commodity) market, there are numerous <code>market conventions</code>.</p></li><li><p>The most important aspect of pricing FICC products is how to properly incorporate the details of these various market conventions into the implementation.</p></li><li><p>The <code>day count convention</code>, like holidays, differs by country and market. <code>QuantLib</code> provides various day count conventions through the <code>DayCounter</code> class.</p></li></ul></div><div class="warning custom-block"><p class="custom-block-title">Day Count Convention</p><ul><li><p>The day count convention is a mutual agreement on how to calculate interest when the interest period is less than a year. This is a crucial detail in the swap and bond markets, where interest is exchanged on a quarterly or semi-annual basis.</p></li><li><p>Since interest rates are quoted on an annual basis, it is necessary to align the time frame to an annual unit for calculating interest for periods shorter than a year.</p></li><li><p>In simple terms, the day count convention requires defining two things: &quot;how many days to consider in a year&quot; and &quot;how many days to consider in a month.&quot;</p></li><li><p>Regarding how many days to consider in a year, there are options like <code>ACT</code>, <code>365</code>, <code>360</code>, and <code>252</code>.</p><ul><li><code>ACT</code> stands for Actual, meaning it calculates the actual number of days in that year. If <code>ACT</code> is used, a leap year would have 366 days.</li><li>The other conventions fix the year length to 365, 360, or 252 days.</li></ul></li><li><p>For determining how many days to consider in a month, there are options like <code>ACT</code>, <code>30</code>, and <code>business days</code>.</p><ul><li><code>ACT</code> calculates the actual number of days in the interest period, while <code>30</code> assumes each month has 30 days.</li><li><code>Business days</code> only counts business days, excluding holidays.</li><li>For example, if the <code>30</code> method is used for the period from August 2 to October 2, it would be calculated as 2 months and 1 day, resulting in 30 x 2 + 1 = 61 days.</li></ul></li><li><p>Combining these two factors results in expressions like <code>ACT/365</code>, <code>ACT/360</code>, <code>ACT/ACT</code>, <code>30/360</code>, etc., which represent market conventions for calculating interest days.</p><ul><li>The numerator represents the monthly convention, while the denominator represents the yearly convention.</li><li>The conventions used vary by country: the U.S. uses <code>ACT/360</code>, Europe uses <code>30/360</code>, and South Korea uses <code>ACT/365</code>.</li></ul></li></ul></div><h2 id="structure-of-the-daycounter-class" tabindex="-1">Structure of the DayCounter Class <a class="header-anchor" href="#structure-of-the-daycounter-class" aria-label="Permalink to &quot;Structure of the DayCounter Class&quot;">​</a></h2><div class="danger custom-block"><p class="custom-block-title">DayCounter Class Structure</p><p>Implementing the <code>DayCounter</code> class is very straightforward. Just like the <code>Calendar</code> class, you simply need to declare the desired method of use. Below is an example code demonstrating each of the day count conventions.</p></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">act360 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Actual360()                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/360</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">act365 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Actual365Fixed()                     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/365</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actact </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.ActualActual(ql.ActualActual.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ISDA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/ACT (ISDA)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thirty360 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Thirty360(ql.Thirty360.European)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 30/360 (EU)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b252 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Business252()                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BusinessDay/252</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">simpledc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.SimpleDayCounter()                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># NASD</span></span></code></pre></div><div class="warning custom-block"><p class="custom-block-title">Day Count Convention</p><ul><li><p><code>Actual360</code> : Actual / 360</p></li><li><p><code>Actual365Fixed</code> : Actual / 365(Fixed)</p><ul><li>Standard</li><li>Canadian</li><li>NoLeap</li></ul></li><li><p><code>ActualActual</code> : Actual / Actual</p><ul><li>ISMA</li><li>Bond</li><li>ISDA</li><li>Historical</li><li>Actual365</li><li>AFB</li><li>Euro</li></ul></li><li><p><code>Business252</code> : Business / 252</p></li><li><p><code>Thirty365</code> : 30 / 360</p><ul><li>USA</li><li>BondBasis</li><li>European</li><li>EurobondBasis</li></ul></li><li><p><code>Italian</code></p><ul><li>German</li><li>ISMA</li><li>ISDA</li></ul></li><li><p><code>SimpleDayCounter</code> : NASD</p></li></ul></div>`,7)),n(a),s[2]||(s[2]=i(`<h2 id="functions-of-the-daycounter-class" tabindex="-1">Functions of the DayCounter Class <a class="header-anchor" href="#functions-of-the-daycounter-class" aria-label="Permalink to &quot;Functions of the DayCounter Class&quot;">​</a></h2><div class="info custom-block"><p class="custom-block-title">DayCounter Class Functions</p><ul><li>The <code>DayCounter</code> class has two main functions.</li><li>One is the <code>dayCount()</code> method, which calculates the number of days between two dates, and the other is the <code>yearFraction()</code> method, which calculates the time period between two dates in years based on market conventions.</li></ul></div><h3 id="daycount" tabindex="-1">dayCount() <a class="header-anchor" href="#daycount" aria-label="Permalink to &quot;dayCount()&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">dayCount</p><ul><li>The <code>dayCount()</code> method provides functionality to calculate the period between two dates in days, based on the specified day count convention.</li></ul></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">act360 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Actual360()                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/360</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">act365 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Actual365Fixed()                     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/365</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actact </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.ActualActual(ql.ActualActual.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ISDA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/ACT (ISDA)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thirty360 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Thirty360(ql.Thirty360.European)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 30/360 (EU)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b252 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Business252()                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BusinessDay/252</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">simpledc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.SimpleDayCounter()                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># NASD</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Function</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">startDate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endDate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dayCount(Date1, Date2)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day Count by Actual/360 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">act360.dayCount(startDate, endDate)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day Count by Actual/365 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">act365.dayCount(startDate, endDate)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day Count by Actual/Actual = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actact.dayCount(startDate, endDate)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day Count by 30/360 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thirty360.dayCount(startDate, endDate)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day Count by BusinessDay/252 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b252.dayCount(startDate, endDate)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day Count by SimpleDayCount = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">simpledc.dayCount(startDate, endDate)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Output</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Day Count by Actual/360 = 92</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Day Count by Actual/365 = 92</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Day Count by Actual/Actual = 92</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Day Count by 30/360 = 90</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Day Count by BusinessDay/252 = 65</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Day Count by SimpleDayCount = 90</span></span></code></pre></div><h3 id="yearfraction" tabindex="-1">yearFraction() <a class="header-anchor" href="#yearfraction" aria-label="Permalink to &quot;yearFraction()&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">yearFraction</p><ul><li>The <code>yearFraction()</code> method provides functionality to convert the period between two given dates into years, using a specified day count convention.</li><li>Each method yields different results depending on how many days are considered in a year. In other words, the calculated interest amount can vary depending on which market convention is used.</li></ul></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">act360 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Actual360()                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/360</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">act365 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Actual365Fixed()                     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/365</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">actact </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.ActualActual(ql.ActualActual.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ISDA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ACT/ACT (ISDA)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">thirty360 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Thirty360(ql.Thirty360.European)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 30/360 (EU)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b252 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Business252()                          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BusinessDay/252</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">simpledc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.SimpleDayCounter()                   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># NASD</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Function</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">startDate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">endDate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># yearFraction(Date1, Date2)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Year Fraction by Actual/360 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(act360.yearFraction(startDate, endDate), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Year Fraction by Actual/365 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(act365.yearFraction(startDate, endDate), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Year Fraction by Actual/Actual = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(actact.yearFraction(startDate, endDate), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Year Fraction by 30/360 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(thirty360.yearFraction(startDate, endDate), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Year Fraction by BusinessDay/252 = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(b252.yearFraction(startDate, endDate), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Year Fraction by SimpleDayCount = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{round</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(simpledc.yearFraction(startDate, endDate), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Output</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Year Fraction by Actual/360 = 0.2556</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Year Fraction by Actual/365 = 0.2521</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Year Fraction by Actual/Actual = 0.2514</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Year Fraction by 30/360 = 0.25</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Year Fraction by BusinessDay/252 = 0.2579</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## Year Fraction by SimpleDayCount = 0.25</span></span></code></pre></div>`,8))])}const g=t(p,[["render",k]]);export{u as __pageData,g as default};
