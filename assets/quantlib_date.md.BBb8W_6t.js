import{_ as l,c as h,j as i,a,G as t,a2 as e,B as p,o as k}from"./chunks/framework.CdbxnhrM.js";const F=JSON.parse('{"title":"퀀트립(QuantLib-Python): Date 클래스","description":"QuantLib Date 클래스는 금융 시장에서 중요한 날짜 계산을 처리하는 데 사용된다. 파생상품 평가, 이자 계산, 만기일 등 금융 공학에서 날짜는 매우 중요한 요소이며, 이 클래스는 다양한 날짜 관련 작업을 효율적으로 처리할 수 있도록 설계되었다.","frontmatter":{"description":"QuantLib Date 클래스는 금융 시장에서 중요한 날짜 계산을 처리하는 데 사용된다. 파생상품 평가, 이자 계산, 만기일 등 금융 공학에서 날짜는 매우 중요한 요소이며, 이 클래스는 다양한 날짜 관련 작업을 효율적으로 처리할 수 있도록 설계되었다.","head":[["meta",{"property":"og:title","content":"퀀트립(QuantLib-Python), Date 클래스"}],["meta",{"property":"og:description","content":"QuantLib Date 클래스는 금융 시장에서 중요한 날짜 계산을 처리하는 데 사용된다. 파생상품 평가, 이자 계산, 만기일 등 금융 공학에서 날짜는 매우 중요한 요소이며, 이 클래스는 다양한 날짜 관련 작업을 효율적으로 처리할 수 있도록 설계되었다."}],["meta",{"property":"og:image","content":"/images/QuantLib.jpg"}],["meta",{"property":"og:url","content":"https://quant-haunblog.github.io/quantlib/date"}]]},"headers":[],"relativePath":"quantlib/date.md","filePath":"ko/quantlib/date.md","lastUpdated":null}'),d={name:"quantlib/date.md"};function r(E,s,o,y,g,c){const n=p("AdsInarticle");return k(),h("div",null,[s[0]||(s[0]=i("h1",{id:"퀀트립-quantlib-python-date-클래스",tabindex:"-1"},[a("퀀트립(QuantLib-Python): Date 클래스 "),i("a",{class:"header-anchor",href:"#퀀트립-quantlib-python-date-클래스","aria-label":'Permalink to "퀀트립(QuantLib-Python): Date 클래스"'},"​")],-1)),s[1]||(s[1]=i("p",null,[i("strong",null,[a("QuantLib "),i("code",null,"Date"),a(" 클래스는 금융 시장에서 중요한 "),i("code",null,"날짜 계산"),a("을 처리하는 데 사용된다.")])],-1)),s[2]||(s[2]=i("p",null,[i("strong",null,[a("파생상품 평가, 이자 계산, 만기일 등 금융 공학에서 "),i("code",null,"날짜"),a("는 매우 중요한 요소이며, 이 클래스는 다양한 날짜 관련 작업을 효율적으로 처리할 수 있도록 설계되었다.")])],-1)),t(n),s[3]||(s[3]=e(`<h2 id="date-클래스-개요" tabindex="-1">Date 클래스 개요 <a class="header-anchor" href="#date-클래스-개요" aria-label="Permalink to &quot;Date 클래스 개요&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">Date 클래스 개요</p><ul><li><code>파생상품</code>의 <code>가격</code>을 평가하기에 앞서 <code>시간</code>이라는 존재가 전제되어 있어야만 한다. 왜냐하면 시간이 흐르는 과정 속에서 <code>기초자산</code> 및 기타 <code>외부 변수</code>들이 변화하고 또 그 과정 속에서 파생상품의 가격 또한 영향을 받기 때문이다.</li><li>심지어 모든 <code>변수</code>가 변하지 않아도 <code>파생상품</code>은 <code>만기</code>라는 것이 존재하기 때문에 시간이 지남에 따라 가격은 바뀔 수 밖에 없다.</li><li><code>파생상품</code>의 탄생과 소멸의 순간이 <code>효력발생일(Effective Date)</code>과 <code>만기일(Maturity Date)</code>에 해당되며, 효력발생일로부터 만기일까지 시간이 하루하루 지남에 따라 <code>파생상품</code>의 가격 또한 변한다.</li><li>결국 <code>파생상품</code>의 세계에서는 <code>효력발생일</code>과 <code>만기일</code>, 혹은 <code>결제일</code> 등을 지정해 주는 것이 필수적이며, <code>QuantLib</code>은 이러한 날짜를 선언해 주기 위해 <code>Date</code> 라는 클래스를 가지고 있다.</li></ul></div><h2 id="date-클래스-구조" tabindex="-1">Date 클래스 구조 <a class="header-anchor" href="#date-클래스-구조" aria-label="Permalink to &quot;Date 클래스 구조&quot;">​</a></h2><h3 id="date-클래스-구현방법-1" tabindex="-1">Date 클래스 구현방법 #1 <a class="header-anchor" href="#date-클래스-구현방법-1" aria-label="Permalink to &quot;Date 클래스 구현방법 #1&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">#1, ql.Date(Day, Month, Year)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ql.Date(Day, Month, Year)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date.ISO())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span></code></pre></div><ul><li>인자에 각각 <code>일(Day)</code>, <code>월(Month)</code>, <code>년(Year)</code>을 입력하는 방법</li><li>일반적이면서 직관적이기 때문에 많이 사용하는 방법</li></ul></div><h3 id="date-클래스-구현방법-2" tabindex="-1">Date 클래스 구현방법 #2 <a class="header-anchor" href="#date-클래스-구현방법-2" aria-label="Permalink to &quot;Date 클래스 구현방법 #2&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">#2, ql.Date(dateString, formatString)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ql.Date(dateString, formatString)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20240630&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%Y%m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date.ISO())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span></code></pre></div><ul><li><code>문자열</code> 형태의 일자 정보를 입력하는 방법</li><li>금융회사 실무에서 회사 DB 내 저장된 일자 정보를 읽어와 그대로 사용 시 #1 보다 #2 가 간편함</li></ul></div><h3 id="date-클래스-구현방법-3" tabindex="-1">Date 클래스 구현방법 #3 <a class="header-anchor" href="#date-클래스-구현방법-3" aria-label="Permalink to &quot;Date 클래스 구현방법 #3&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">#3, # ql.Date(serialNumber)</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ql.Date(serialNumber)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45473</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date.ISO())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span></code></pre></div><ul><li>엑셀로 날짜 기능 사용하는 방법과 유사, 1900년 1월 1일을 1로 정하여 하루씩 카운팅해나가는 방법</li></ul></div><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> QuantLib </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Construction</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;20240630&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%Y%m</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">45473</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date1)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date2)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(date3)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span></code></pre></div>`,10)),t(n),s[4]||(s[4]=e(`<h2 id="date-클래스-기능" tabindex="-1">Date 클래스 기능 <a class="header-anchor" href="#date-클래스-기능" aria-label="Permalink to &quot;Date 클래스 기능&quot;">​</a></h2><h3 id="date-클래스-주요-기능" tabindex="-1">Date 클래스 주요 기능 <a class="header-anchor" href="#date-클래스-주요-기능" aria-label="Permalink to &quot;Date 클래스 주요 기능&quot;">​</a></h3><div class="danger custom-block"><p class="custom-block-title">1. 날짜 생성 및 조작</p><ul><li>특정 년, 월, 일로 날짜 객체를 생성할 수 있습니다.</li><li>날짜를 더하거나 빼는 등의 연산이 가능합니다. 예를 들어, 30일 후 또는 1년 후의 날짜를 계산할 수 있습니다.</li></ul></div><div class="danger custom-block"><p class="custom-block-title">2. 요일 계산</p><ul><li>특정 날짜가 무슨 요일인지 확인할 수 있습니다.</li></ul></div><div class="danger custom-block"><p class="custom-block-title">3. 비즈니스일 계산</p><ul><li>금융 시장에서는 영업일(비즈니스일) 계산이 중요합니다. 이 클래스는 다양한 금융 캘린더와 함께 사용하여 특정 날짜가 영업일인지 확인하거나, 영업일을 기준으로 날짜를 조정할 수 있습니다.</li></ul></div><div class="danger custom-block"><p class="custom-block-title">4. 날짜 비교</p><ul><li>날짜 간의 비교 연산을 통해 두 날짜의 차이를 계산하거나, 특정 날짜가 더 이른지, 늦은지 비교할 수 있습니다.</li></ul></div><h3 id="member-functions" tabindex="-1">Member functions <a class="header-anchor" href="#member-functions" aria-label="Permalink to &quot;Member functions&quot;">​</a></h3><p>Date 클래스는 특정 일자의 요일, 월, 년 등의 정보를 제공한다.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">date </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2024-06-30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ISO() : ISO format, YYYY-MM-DD</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ISO format:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.ISO())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ISO format: 2024-06-30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># weekday()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># an integer that returns the number corresponding to the week</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Sunday:1 - ... - Saturday:7</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Weekday:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.weekday())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Weekday: 1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dayOfMonth()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># integer, the date returned is the day of the month</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day of Month:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.dayOfMonth())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Day of Month: 30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dayOfYear()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># integer, the date returned is the day of the year</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Day of Year:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.dayOfYear())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Day of Year: 182</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># month()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># an integer that returns the month corresponding to the date</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Month:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.month())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Month: 6</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># year()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># an integer that returns the year corresponding to the date</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Year:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.year())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Year: 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># serialNumber()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># integer, the number of days corresponding to the return date </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (starting from 1899-12-31)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Serial Number:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, date.serialNumber())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Serial Number: 45473</span></span></code></pre></div><h3 id="static-functions" tabindex="-1">Static functions <a class="header-anchor" href="#static-functions" aria-label="Permalink to &quot;Static functions&quot;">​</a></h3><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.todaysDate()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date object, which returns the current date of the system.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Today:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.todaysDate())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Today: September 5th, 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.minDate()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date object, which returns the minimum date that QuantLib can represent.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Min Date:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.minDate())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Min Date: January 1st, 1901</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.maxDate()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date object, which returns the maximum date that QuantLib can represent.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Max Date:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.maxDate())  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Max Date: December 31st, 2199</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.isLeap(y)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Boolean value to determine whether y is a leap year</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Leap:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.isLeap(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Leap: True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.endOfMonth(d)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date object, which returns the date corresponding to the end of the month where the date d is located</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;End of Month:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.endOfMonth(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># End of Month: August 31st, 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.isEndOfMonth(d)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Boolean value to determine whether d is at the end of the month</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Month End:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.isEndOfMonth(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">29</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Month End: False</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Is Month End:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.isEndOfMonth(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Is Month End: True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.nextWeekday(d, w)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date object, which returns the date corresponding to the first week w after date d </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (for example, the first Friday after 2018-03-12)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Next WD:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.nextWeekday(ql.Date(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), ql.Friday))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Next WD: September 6th, 2024</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date.nthWeekday(n, w, m, y)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Date object, which returns the date corresponding to the n week w in the given month m and year y </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (for example, the third Wednesday of July 2010)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;n-th WD:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Date.nthWeekday(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ql.Wednesday, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># n-th WD: September 18th, 2024</span></span></code></pre></div>`,11))])}const u=l(d,[["render",r]]);export{F as __pageData,u as default};
